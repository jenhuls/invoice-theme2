{"version":3,"sources":["dynamic-repeater-on-category.js","init-foundation.js","wp-foundation.js"],"names":["jQuery","document","ready","$","acf","ajax","extend","events","change [data-key=\"field_57c994a6d8ee5\"] input[type=\"hidden\"]","ready [data-key=\"field_57c994a6d8ee5\"] input[type=\"hidden\"]","setup [data-key=\"field_57c994a6d8ee5\"] input[type=\"hidden\"]","_change_term","e","$value","$el","val","not","trigger","this","request","abort","data","o","action","term_id","post_id","my_acf_extension_object","exists","url","get","prepare_for_ajax","type","dataType","async","success","json","len","length","i","feature_list","json_item","start","id","getAttribute","_setup","css","foundation","remove","last","addClass","each","innerWidth","innerHeight","wrap"],"mappings":"AACAA,OAAAC,UAAAC,MAAA,SAAAC,GAEA,GAAA,mBAAAC,KAAA,CAIAA,IAAAC,KAAAC,QACAC,QAKAC,+DAAA,eAEAC,8DAAA,eAOAC,8DAAA,UAKAC,aAAA,SAAAC,GAGAC,OAAAD,EAAAE,IAAAC,MAKAZ,EAAA,qEAAAa,IAAA,+EAAAC,QAAA,SAMAC,KAAAC,SACAD,KAAAC,QAAAC,OAKA,IACAC,GAAAH,KAAAI,CAGAD,GAAAE,OAAA,0BAEAF,EAAAG,QAAAX,OAMAQ,EAAAI,QAAAC,wBAAAD,QAIAJ,EAAAM,UAGAT,KAAAC,QAAAhB,EAAAE,MACAuB,IAAAxB,IAAAyB,IAAA,WACAR,KAAAjB,IAAA0B,iBAAAT,GACAU,KAAA,OACAC,SAAA,OACAC,OAAA,EACAC,QAAA,SAAAC,GAEA,GAAAA,EAAA,CAIA,GAAAC,GAAAD,EAAAE,MACA,KAAAC,EAAA,EAAAA,EAAAF,EAAAE,IAGAnC,EAAA,8EAAAc,QAAA,QAWA,IAAAsB,GAAApC,EAAA,kDAAAa,IAAA,oDAGAwB,EAAAJ,EAAA,EACAK,EAAAF,EAAAF,OAAA,CACA,KAAAC,EAAAG,EAAAH,GAAA,EAAAA,GAAA,EAAA,CAEA,GAAAI,GAAAH,EAAAD,GAAAK,aAAA,UAEAxC,GAAA,mDAAAuC,EAAA,+CAAA3B,IAAAoB,EAAAK,GAAA,qBAEArC,EAAA,mDAAAuC,EAAA,+CAAA3B,IAAAoB,EAAAK,GAAA,qBAEAA,GAAA,EAGArC,EAAA,0CAAAc,QAAA,cAMA2B,OAAA,SAAAhC,GAGAT,EAAA,kEAAA0C,IAAA,UAAA,QACA1C,EAAA,+DAAA0C,IAAA,UAAA,UAKA1C,GAAA,0CAAAc,QAAA,YC5HAjB,OAAAC,UAAA6C,aCKA9C,OAAAC,UAAAC,MAAA,WAGAF,OAAA,sCAAA+C,SAGA/C,OAAA,0BAAAgD,OAAAC,SAAA,OAGAjD,OAAA,wDAAAkD,KAAA,WACAlD,OAAAkB,MAAAiC,aAAAnD,OAAAkB,MAAAkC,cAAA,IACApD,OAAAkB,MAAAmC,KAAA,wCAEArD,OAAAkB,MAAAmC,KAAA","file":"scripts.min.js","sourcesContent":["\t\n\tjQuery(document).ready(function($){\n\t\t// make sure acf is loaded, it should be, but just in case\n\t\tif (typeof acf == 'undefined') { return; }\n\t\t\n\t\t// extend the acf.ajax object\n\t\t// you should probably rename this var\n\t\tvar myACFextension = acf.ajax.extend({\n\t\t\tevents: {\n\t\t\t\t// this data-key must match the field key taxonomy field\n\t\t\t\t// we want to trigger the change\n\t\t\t\t// in this case, the taxonomy field is a Select2 field\n\t\t\t\t// and we want the value of a hidden field and not the select field\n\t\t\t\t'change [data-key=\"field_57c994a6d8ee5\"] input[type=\"hidden\"]': '_change_term',\n\t\t\t\t// this entry is to cause the field to update on page load\n\t\t\t\t'ready [data-key=\"field_57c994a6d8ee5\"] input[type=\"hidden\"]': '_change_term',\n\t\t\t\t\n\t\t\t\t// for this example we also want to hide all of the \"add row\" buttons\n\t\t\t\t// because we only want the user to be able to set existing values\n\t\t\t\t// and not add new ones so we'll add another ready function\n\t\t\t\t// that will do this maintenance, this is our own special action\n\t\t\t\t// setup is not a real action, we're creating a new one\n\t\t\t\t'setup [data-key=\"field_57c994a6d8ee5\"] input[type=\"hidden\"]': '_setup',\n\t\t\t},\n\t\t\t\n\t\t\t// this is our function that will perform the\n\t\t\t// ajax request when the state value is changed\n\t\t\t_change_term: function(e){\n\t\t\t\t\n\t\t\t\t// get the value of the taxonomy field\n\t\t\t\t$value = e.$el.val();\n\t\t\t\t\n\t\t\t\t// remove any existing rows of the repeater, except the clone row\n\t\t\t\t// by triggering each row's remove-row click event\n\t\t\t\t// the data-key is the field key of the repeater\n\t\t\t\t$('div[data-key=\"field_57c994f2d8ee6\"] tr a[data-event=\"remove-row\"]').not('div[data-key=\"field_57c994f2d8ee6\"] tr.acf-clone a[data-event=\"remove-row\"]').trigger('click');\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// I assume this tests to see if there is already a request\n\t\t\t\t// for this and cancels it if there is\n\t\t\t\tif( this.request) {\n\t\t\t\t\tthis.request.abort();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// I don't know exactly what it does\n\t\t\t\t// acf does it so I copied it\n\t\t\t\tvar self = this,\n\t\t\t\t\t\tdata = this.o;\n\t\t\t\t\t\t\n\t\t\t\t// set the ajax action that's set up in php\n\t\t\t\tdata.action = 'load_features_from_term';\n\t\t\t\t// set the term id value to be submitted\n\t\t\t\tdata.term_id = $value;\n\t\t\t\t\n\t\t\t\t// this gets the post ID that we set when localizing the script\n\t\t\t\t// you should change this object name to something unique\n\t\t\t\t// will will also need to change this object name in the PHO file\n\t\t\t\t// where this script is enqueued\n\t\t\t\tdata.post_id = my_acf_extension_object.post_id\n\t\t\t\t\n\t\t\t\t// this is another bit I'm not sure about\n\t\t\t\t// copied from ACF\n\t\t\t\tdata.exists = [];\n\t\t\t\t\n\t\t\t\t// this the request is copied from ACF\n\t\t\t\tthis.request = $.ajax({\n\t\t\t\t\turl:\t\tacf.get('ajaxurl'),\n\t\t\t\t\tdata:\t\tacf.prepare_for_ajax(data),\n\t\t\t\t\ttype:\t\t'post',\n\t\t\t\t\tdataType:\t'json',\n\t\t\t\t\tasync: true,\n\t\t\t\t\tsuccess: function(json){\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!json) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// add enough rows to the repeater to hold the values\n\t\t\t\t\t\tvar len = json.length;\n\t\t\t\t\t\tfor (i=0; i<len; i++) {\n\t\t\t\t\t\t\t// trigger the add-row action for the repeater\n\t\t\t\t\t\t\t// data-key = field key of the repeater\n\t\t\t\t\t\t\t$('div[data-key=\"field_57c994f2d8ee6\"] ul.acf-actions a[data-event=\"add-row\"]').trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// we need to get the entire list of fields for both\n\t\t\t\t\t\t// of the fields we want to fill and we need to fill\n\t\t\t\t\t\t// them from the bottom up, the reason for this is\n\t\t\t\t\t\t// that the removal of the existing rows may not\n\t\t\t\t\t\t// actually be completed at this point, so we don't\n\t\t\t\t\t\t// want to put values in fields we're going to delete\n\t\t\t\t\t\t\n\t\t\t\t\t\t// first get all of the repeater rows, except the clone row\n\t\t\t\t\t\t// the first data key is the repeater key\n\t\t\t\t\t\tvar feature_list = $('div[data-key=\"field_57c994f2d8ee6\"] tr.acf-row').not('div[data-key=\"field_57c994f2d8ee6\"] tr.acf-clone');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// start at the end\n\t\t\t\t\t\tvar json_item = len - 1;\n\t\t\t\t\t\tvar start = feature_list.length - 1;\n\t\t\t\t\t\tfor (i=start; i>=0; i-=1) {\n\t\t\t\t\t\t\t// get the ID of this item\n\t\t\t\t\t\t\tvar id = feature_list[i].getAttribute('data-id');\n\t\t\t\t\t\t\t// populate the featur\n\t\t\t\t\t\t\t$('div[data-key=\"field_57c994f2d8ee6\"] tr[data-id=\"'+id+'\"] td[data-key=\"field_57c99507d8ee7\"] input').val(json[json_item]['field_57c99507d8ee7']);\n\t\t\t\t\t\t\t// populate the value\n\t\t\t\t\t\t\t$('div[data-key=\"field_57c994f2d8ee6\"] tr[data-id=\"'+id+'\"] td[data-key=\"field_57c99515d8ee8\"] input').val(json[json_item]['field_57c99515d8ee8']);\n\t\t\t\t\t\t\t// decrease json item\n\t\t\t\t\t\t\tjson_item-=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// last thing to do is trigger setup to make sure we keep the add/remvove buttons hidden\n\t\t\t\t\t\t$('[data-key=\"field_57c994a6d8ee5\"] input').trigger('setup');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, // end _change_term\n\t\t\t\n\t\t\t// this function will hide the add/remove rows buttons\n\t\t\t_setup: function(e) {\n\t\t\t\t// hide all add/delete row links\n\t\t\t\t// this data key is the key for the repeater field\n\t\t\t\t$('div[data-key=\"field_57c994f2d8ee6\"] a[data-event=\"remove-row\"]').css('display', 'none');\n\t\t\t\t$('div[data-key=\"field_57c994f2d8ee6\"] a[data-event=\"add-row\"]').css('display', 'none');\n\t\t\t}, // end _setup\n\t\t});\n\t\t\n\t\t// triger the setup action on page load\n\t\t$('[data-key=\"field_57c994a6d8ee5\"] input').trigger('setup');\n\t});","jQuery(document).foundation();","/*\nThese functions make sure WordPress\nand Foundation play nice together.\n*/\n\njQuery(document).ready(function() {\n\n    // Remove empty P tags created by WP inside of Accordion and Orbit\n    jQuery('.accordion p:empty, .orbit p:empty').remove();\n\n\t // Makes sure last grid item floats left\n\tjQuery('.archive-grid .columns').last().addClass( 'end' );\n\n\t// Adds Flex Video to YouTube and Vimeo Embeds\n  jQuery('iframe[src*=\"youtube.com\"], iframe[src*=\"vimeo.com\"]').each(function() {\n    if ( jQuery(this).innerWidth() / jQuery(this).innerHeight() > 1.5 ) {\n      jQuery(this).wrap(\"<div class='widescreen flex-video'/>\");\n    } else {\n      jQuery(this).wrap(\"<div class='flex-video'/>\");\n    }\n  });\n\n});\n"]}